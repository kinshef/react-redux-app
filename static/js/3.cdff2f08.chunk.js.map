{"version":3,"sources":["components/message/Message.module.css","components/message/Dialogs/Dialogs.jsx","components/message/Messages/Messages.jsx","components/message/Message.jsx","hoc/withAuthRedirect.js","components/message/MessageContainer.jsx"],"names":["module","exports","DialogItems","props","to","id","user","Messages","messages","maxLength10","maxLengthCreator","NewMassageText","reduxForm","form","className","s","onSubmit","handleSubmit","Field","placeholder","name","component","Input","validate","required","Message","dialogsElement","messagesPage","dialogsData","map","even","key","messagesElement","messagesData","container","dialogsItems","value","addMassage","newMessage","mapStateToProps","state","isAuth","auth","compose","connect","Component","RedirectComponent","this","React"],"mappings":"2FACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,KAAO,sBAAsB,UAAY,2BAA2B,aAAe,8BAA8B,SAAW,4B,oJCUlKC,EANG,SAACC,GACf,OACI,4BAAI,kBAAC,IAAD,CAASC,GAAE,mBAAcD,EAAME,KAAOF,EAAMG,QCGzCC,G,OANA,SAACJ,GACZ,OACI,2BAAIA,EAAMK,Y,gCCEZC,EAAcC,YAAiB,IAW/BC,EAAiBC,YAAU,CAACC,KAAM,cAAjBD,EATA,SAACT,GACpB,OACI,0BAAMW,UAAWC,IAAEF,KAAMG,SAAUb,EAAMc,cACrC,kBAACC,EAAA,EAAD,CAAOC,YAAa,WAAYC,KAAM,aAAcC,UAAWC,IAAOC,SAAU,CAACC,IAAUf,KAC3F,gDAmCGgB,EA5BD,SAACtB,GACX,IAAIuB,EAAiBvB,EAAMwB,aAAaC,YAAYC,KAAI,SAACC,GAAD,OAAU,kBAAC,EAAD,CAAazB,GAAIyB,EAAKzB,GAAI0B,IAAKD,EAAKzB,GAAIC,KAAMwB,EAAKV,UACjHY,EAAkB7B,EAAMwB,aAAaM,aAAaJ,KAAI,SAACC,GAAD,OAAU,kBAAC,EAAD,CAAUzB,GAAIyB,EAAKzB,GAAI0B,IAAKD,EAAKzB,GAAIG,SAAUsB,EAAKtB,cAMxH,OACI,yBAAKM,UAAWC,IAAEU,SACd,sCACA,yBAAKX,UAAWC,IAAEmB,WACd,yBAAKpB,UAAWC,IAAEoB,cACd,4BACKT,IAGT,yBAAKZ,UAAWC,IAAEP,UACbwB,EACD,kBAACrB,EAAD,CAAgBK,SAfV,SAACoB,GACnBjC,EAAMkC,WAAWD,EAAME,mB,wDCrB3BC,EAAkB,SAACC,GACnB,MAAO,CACHC,OAAQD,EAAME,KAAKD,S,OCEZE,sBAAQC,aAFD,SAACJ,GAAW,MAAM,CAACb,aAAca,EAAMb,gBAEb,CAACU,kBDEjB,SAACQ,GAAe,IACtCC,EADqC,iLAGnC,OAAKC,KAAK5C,MAAMsC,OACT,kBAACI,EAAcE,KAAK5C,OADI,kBAAC,IAAD,CAAUC,GAAG,eAHT,GACX4C,IAAMH,WAStC,OAFqCD,YAAQL,EAAiB,GAAzBK,CAA6BE,KCVvDH,CAAkElB","file":"static/js/3.cdff2f08.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Message\":\"Message_Message__2u5MS\",\"form\":\"Message_form__3NAvM\",\"container\":\"Message_container__1M9u_\",\"dialogsItems\":\"Message_dialogsItems__PwYVA\",\"messages\":\"Message_messages__2MoHr\"};","import React from 'react';\r\nimport s from './Dialogs.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\nlet DialogItems = (props) => {\r\n    return (\r\n        <li><NavLink to={`/message/${props.id}`}>{props.user}</NavLink></li>\r\n    )\r\n}\r\n\r\nexport default DialogItems;","import React from 'react';\r\nimport s from './Messages.module.css';\r\n\r\n\r\nlet Messages = (props) => {\r\n    return (\r\n        <p>{props.messages}</p>\r\n    );\r\n}\r\n\r\nexport default Messages;","import React from 'react';\r\nimport s from './Message.module.css';\r\nimport DialogItems from \"./Dialogs/Dialogs\";\r\nimport Messages from \"./Messages/Messages\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../utilit/validators\";\r\nimport {Input} from \"../../utilit/FormControls/FormsControls\";\r\n\r\nconst maxLength10 = maxLengthCreator(10)\r\n\r\nconst AddMessageForm = (props) => {\r\n    return (\r\n        <form className={s.form} onSubmit={props.handleSubmit}>\r\n            <Field placeholder={\"New text\"} name={\"newMessage\"} component={Input} validate={[required, maxLength10]}/>\r\n            <button>add post</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst NewMassageText = reduxForm({form: 'newMessage'})(AddMessageForm)\r\n\r\nlet Message = (props) => {\r\n    let dialogsElement = props.messagesPage.dialogsData.map((even) => <DialogItems id={even.id} key={even.id} user={even.name}/>)\r\n    let messagesElement = props.messagesPage.messagesData.map((even) => <Messages id={even.id} key={even.id} messages={even.messages}/>)\r\n\r\n    const addNewMessage = (value) => {\r\n        props.addMassage(value.newMessage)\r\n    }\r\n\r\n    return (\r\n        <div className={s.Message}>\r\n            <p>Message</p>\r\n            <div className={s.container}>\r\n                <div className={s.dialogsItems}>\r\n                    <ul>\r\n                        {dialogsElement}\r\n                    </ul>\r\n                </div>\r\n                <div className={s.messages}>\r\n                    {messagesElement}\r\n                    <NewMassageText onSubmit={addNewMessage} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\n\r\nexport default Message;","import React from 'react';\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        isAuth: state.auth.isAuth\r\n    }\r\n};\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to='/login'/>\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n\r\n    const connectAuthRedirectComponent = connect(mapStateToProps, {})(RedirectComponent);\r\n\r\n    return connectAuthRedirectComponent\r\n}\r\n","import React from 'react';\r\nimport {addMassage} from \"../../redux/messages-reducer\";\r\nimport Message from \"./Message\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nlet mapStateToProps = (state) => {return{messagesPage: state.messagesPage}};\r\n\r\nexport default compose(connect(mapStateToProps, {addMassage}), withAuthRedirect)(Message);"],"sourceRoot":""}
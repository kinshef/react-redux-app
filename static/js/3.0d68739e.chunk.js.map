{"version":3,"sources":["components/message/Message.module.css","components/message/Dialogs/Dialogs.jsx","components/message/Messages/Messages.jsx","components/message/Message.jsx","hoc/withAuthRedirect.js","redux/selectors/message-selectors.js","components/message/MessageContainer.jsx"],"names":["module","exports","DialogItems","id","user","to","Messages","messages","maxLength10","maxLengthCreator","NewMassageText","reduxForm","form","handleSubmit","className","style","onSubmit","Field","placeholder","name","component","Input","validate","required","Message","dialogsData","messagesData","addMassage","dialogsElement","map","even","key","messagesElement","container","dialogsItems","value","newMessage","mapStateToProps","state","isAuth","auth","getDialogsData","messagesPage","getMessagesData","compose","connect","Component","RedirectComponent","this","props","React"],"mappings":"2FACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,KAAO,sBAAsB,UAAY,2BAA2B,aAAe,8BAA8B,SAAW,4B,+FCUlKC,EANG,SAAC,GAAgB,IAAfC,EAAc,EAAdA,GAAIC,EAAU,EAAVA,KACpB,OACI,4BAAI,kBAAC,IAAD,CAASC,GAAE,mBAAcF,IAAOC,KCG7BE,EANA,SAAC,GAAgB,IAAfC,EAAc,EAAdA,SACb,OACI,2BAAIA,I,gCCENC,EAAcC,YAAiB,IAW/BC,EAAiBC,YAAU,CAACC,KAAM,cAAjBD,EATA,SAAC,GAAoB,IAAnBE,EAAkB,EAAlBA,aACrB,OACI,0BAAMC,UAAWC,IAAMH,KAAMI,SAAUH,GACnC,kBAACI,EAAA,EAAD,CAAOC,YAAa,WAAYC,KAAM,aAAcC,UAAWC,IAAOC,SAAU,CAACC,IAAUf,KAC3F,gDAmCGgB,EA5BD,SAAC,GAA6C,IAA5CC,EAA2C,EAA3CA,YAAaC,EAA8B,EAA9BA,aAAcC,EAAgB,EAAhBA,WACnCC,EAAiBH,EAAYI,KAAI,SAACC,GAAD,OAAU,kBAAC,EAAD,CAAa3B,GAAI2B,EAAK3B,GAAI4B,IAAKD,EAAK3B,GAAIC,KAAM0B,EAAKX,UAC9Fa,EAAkBN,EAAaG,KAAI,SAACC,GAAD,OAAU,kBAAC,EAAD,CAAU3B,GAAI2B,EAAK3B,GAAI4B,IAAKD,EAAK3B,GAAII,SAAUuB,EAAKvB,cAMrG,OACI,yBAAKO,UAAWC,IAAMS,SAClB,sCACA,yBAAKV,UAAWC,IAAMkB,WAClB,yBAAKnB,UAAWC,IAAMmB,cAClB,4BACKN,IAGT,yBAAKd,UAAWC,IAAMR,UACjByB,EACD,kBAACtB,EAAD,CAAgBM,SAfV,SAACmB,GACnBR,EAAWQ,EAAMC,mB,wDCrBrBC,EAAkB,SAACC,GACnB,MAAO,CACHC,OAAQD,EAAME,KAAKD,S,OCNdE,EAAiB,SAACH,GAC3B,OAAOA,EAAMI,aAAajB,aAEjBkB,EAAkB,SAACL,GAC5B,OAAOA,EAAMI,aAAahB,cCUfkB,sBAAQC,aAPD,SAACP,GACnB,MAAM,CACFb,YAAagB,EAAeH,GAC5BZ,aAAciB,EAAgBL,MAIU,CAACX,kBFJjB,SAACmB,GAAe,IACtCC,EADqC,iLAGnC,OAAKC,KAAKC,MAAMV,OACT,kBAACO,EAAcE,KAAKC,OADI,kBAAC,IAAD,CAAU5C,GAAG,eAHT,GACX6C,IAAMJ,WAStC,OAFqCD,YAAQR,EAAiB,GAAzBQ,CAA6BE,KEJvDH,CAAkEpB","file":"static/js/3.0d68739e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Message\":\"Message_Message__2u5MS\",\"form\":\"Message_form__3NAvM\",\"container\":\"Message_container__1M9u_\",\"dialogsItems\":\"Message_dialogsItems__PwYVA\",\"messages\":\"Message_messages__2MoHr\"};","import React from 'react';\r\n// import style from './Dialogs.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\nlet DialogItems = ({id, user}) => {\r\n    return (\r\n        <li><NavLink to={`/message/${id}`}>{user}</NavLink></li>\r\n    )\r\n}\r\n\r\nexport default DialogItems;","import React from 'react';\r\n// import style from './Messages.module.css';\r\n\r\n\r\nlet Messages = ({messages}) => {\r\n    return (\r\n        <p>{messages}</p>\r\n    );\r\n}\r\n\r\nexport default Messages;","import React from 'react';\r\nimport style from './Message.module.css';\r\nimport DialogItems from \"./Dialogs/Dialogs\";\r\nimport Messages from \"./Messages/Messages\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../utilit/validators\";\r\nimport {Input} from \"../../utilit/FormControls/FormsControls\";\r\n\r\nconst maxLength10 = maxLengthCreator(10)\r\n\r\nconst AddMessageForm = ({handleSubmit}) => {\r\n    return (\r\n        <form className={style.form} onSubmit={handleSubmit}>\r\n            <Field placeholder={\"New text\"} name={\"newMessage\"} component={Input} validate={[required, maxLength10]}/>\r\n            <button>add post</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst NewMassageText = reduxForm({form: 'newMessage'})(AddMessageForm)\r\n\r\nlet Message = ({dialogsData, messagesData, addMassage}) => {\r\n    let dialogsElement = dialogsData.map((even) => <DialogItems id={even.id} key={even.id} user={even.name}/>)\r\n    let messagesElement = messagesData.map((even) => <Messages id={even.id} key={even.id} messages={even.messages}/>)\r\n\r\n    const addNewMessage = (value) => {\r\n        addMassage(value.newMessage)\r\n    }\r\n\r\n    return (\r\n        <div className={style.Message}>\r\n            <p>Message</p>\r\n            <div className={style.container}>\r\n                <div className={style.dialogsItems}>\r\n                    <ul>\r\n                        {dialogsElement}\r\n                    </ul>\r\n                </div>\r\n                <div className={style.messages}>\r\n                    {messagesElement}\r\n                    <NewMassageText onSubmit={addNewMessage} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\n\r\nexport default Message;","import React from 'react';\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        isAuth: state.auth.isAuth\r\n    }\r\n};\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to='/login'/>\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n\r\n    const connectAuthRedirectComponent = connect(mapStateToProps, {})(RedirectComponent);\r\n\r\n    return connectAuthRedirectComponent\r\n}\r\n","\r\nexport const getDialogsData = (state) => {\r\n    return state.messagesPage.dialogsData\r\n}\r\nexport const getMessagesData = (state) => {\r\n    return state.messagesPage.messagesData\r\n}\r\n\r\n\r\n\r\n\r\n\r\n","//import React from 'react';\r\nimport {addMassage} from \"../../redux/messages-reducer\";\r\nimport Message from \"./Message\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\nimport {getDialogsData, getMessagesData} from \"../../redux/selectors/message-selectors\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return{\r\n        dialogsData: getDialogsData(state),\r\n        messagesData: getMessagesData(state)\r\n    }\r\n};\r\n\r\nexport default compose(connect(mapStateToProps, {addMassage}), withAuthRedirect)(Message);"],"sourceRoot":""}